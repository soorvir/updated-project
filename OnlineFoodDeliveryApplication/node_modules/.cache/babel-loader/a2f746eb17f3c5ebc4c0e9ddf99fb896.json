{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soorv\\\\Downloads\\\\onlineFoodDelivery_frontend\\\\OnlineFoodDeliveryApplication\\\\src\\\\components\\\\customer\\\\Cart.js\";\nimport React, { Component } from 'react';\nimport FoodItemService from '../../services/FoodItemService';\nimport OrderService from '../../services/OrderService';\nimport './Cart.css';\nimport './Payment.css';\nimport HeaderAfterLogin from '../HeaderAfterLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeOrderQuantity = event => {\n      this.setState({\n        quantity: event.target.value\n      });\n      this.setState({\n        calulateTotal: this.state.quantity\n      });\n      this.setState({\n        foodPrice: this.state.calulateTotal\n      });\n      this.setState({\n        orderEntity: {\n          productQuantity: this.state.quantity,\n          productPrice: this.state.foodPrice,\n          orderStatus: \"success\"\n        }\n      });\n    };\n\n    this.OrderNow = e => {\n      e.preventDefault();\n      let myOrderBe = {\n        \"customerId\": this.state.customerId,\n        \"quantity\": this.state.quantity,\n        \"foodPrice\": this.state.quantity * this.state.foodItem.foodItemPrice,\n        \"foodItem\": [{\n          \"foodItemName\": this.state.foodItem.foodItemName,\n          \"foodItemType\": this.state.foodItem.foodItemType,\n          \"foodItemCategory\": this.state.foodItem.foodItemCategory,\n          \"foodItemPrice\": this.state.foodItem.foodItemPrice,\n          \"restruantId\": this.state.foodItem.restruantId\n        }],\n        \"orderEntity\": {\n          \"productQuantity\": this.state.quantity,\n          \"productPrice\": this.state.quantity * this.state.foodItem.foodItemPrice,\n          \"orderStatus\": \"success\",\n          \"foodOrderId\": this.state.foodItem.foodOrderId\n        }\n      };\n      console.log('myOrderBe =>' + JSON.stringify(myOrderBe));\n      OrderService.postNewOrder(myOrderBe).then(res => {\n        alert(\"Your Order placed Successfully\");\n      });\n      localStorage.setItem(\"TotalAmount\", JSON.stringify(this.state.quantity * this.state.foodItem.foodItemPrice));\n      this.props.history.push(`/payment`);\n    };\n\n    this.state = {\n      // empId : this.props.match.params.id,\n      foodItem: [{}],\n      quantity: '',\n      customerId: localStorage.getItem(\"customerId\"),\n      foodPrice: '',\n      orderEntity: {\n        productQuantity: '',\n        productPrice: '',\n        orderStatus: ''\n      },\n      calulateTotal: ''\n    };\n    this.changeOrderQuantity = this.changeOrderQuantity.bind(this);\n    this.OrderNow = this.OrderNow.bind(this);\n  }\n\n  componentDidMount() {\n    FoodItemService.getFoodById(localStorage.getItem(\"OrderedList\")).then(response => {\n      this.setState({\n        foodItem: response.data\n      });\n    });\n    console.log(this.state.foodItem);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HeaderAfterLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wholeBodyCart\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerCart\",\n          id: \"containerCart\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-containerCart sign-in-containerCart\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                classNamestyle: {\n                  color: 'red'\n                },\n                children: \"Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Food Name:\", this.state.foodItem.foodItemName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Food Type:\", this.state.foodItem.foodItemType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Food category:\", this.state.foodItem.foodItemCategory]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Food Price:\", this.state.foodItem.foodItemPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  marginLeft: '120px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Quantity:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Quantity\",\n                  style: {\n                    marginLeft: '10px',\n                    width: '10%'\n                  },\n                  name: \"quantity\",\n                  value: this.state.quantity,\n                  onChange: this.changeOrderQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.OrderNow,\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Footer\n// Â© 2022 GitHub, Inc.\n// Footer navigation\n// Terms\n// Privacy\n// Security\n// Status\n// Docs\n// Contact GitHub\n// Pricing\n// API\n// Training\n// Blog\n// About","map":{"version":3,"sources":["C:/Users/soorv/Downloads/onlineFoodDelivery_frontend/OnlineFoodDeliveryApplication/src/components/customer/Cart.js"],"names":["React","Component","FoodItemService","OrderService","HeaderAfterLogin","Cart","constructor","props","changeOrderQuantity","event","setState","quantity","target","value","calulateTotal","state","foodPrice","orderEntity","productQuantity","productPrice","orderStatus","OrderNow","e","preventDefault","myOrderBe","customerId","foodItem","foodItemPrice","foodItemName","foodItemType","foodItemCategory","restruantId","foodOrderId","console","log","JSON","stringify","postNewOrder","then","res","alert","localStorage","setItem","history","push","getItem","bind","componentDidMount","getFoodById","response","data","render","color","display","marginLeft","width"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport FoodItemService from '../../services/FoodItemService';\r\nimport OrderService from '../../services/OrderService';\r\nimport './Cart.css';\r\nimport './Payment.css';\r\nimport HeaderAfterLogin from '../HeaderAfterLogin'\r\n\r\n\r\nexport default class Cart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // empId : this.props.match.params.id,\r\n            foodItem: [{}],\r\n            quantity: '',\r\n            customerId: localStorage.getItem(\"customerId\"),\r\n            foodPrice: '',\r\n            orderEntity: {\r\n                productQuantity: '',\r\n                productPrice: '',\r\n                orderStatus: ''\r\n            },\r\n            calulateTotal: ''\r\n        }\r\n        this.changeOrderQuantity = this.changeOrderQuantity.bind(this);\r\n        this.OrderNow = this.OrderNow.bind(this);\r\n    }\r\n\r\n    changeOrderQuantity = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n        this.setState({ calulateTotal: this.state.quantity });\r\n        this.setState({ foodPrice: this.state.calulateTotal });\r\n        this.setState({ orderEntity: { productQuantity: this.state.quantity, productPrice: this.state.foodPrice, orderStatus: \"success\" } });\r\n    }\r\n\r\n    OrderNow = (e) => {\r\n        e.preventDefault();\r\n        let myOrderBe = {\r\n\r\n            \"customerId\":this.state.customerId,\r\n            \"quantity\": this.state.quantity,\r\n            \"foodPrice\":this.state.quantity*this.state.foodItem.foodItemPrice,\r\n            \"foodItem\": [\r\n                {\r\n                    \"foodItemName\": this.state.foodItem.foodItemName,\r\n                    \"foodItemType\": this.state.foodItem.foodItemType,\r\n                    \"foodItemCategory\": this.state.foodItem.foodItemCategory,\r\n                    \"foodItemPrice\": this.state.foodItem.foodItemPrice,\r\n                    \"restruantId\": this.state.foodItem.restruantId\r\n                }\r\n            ],\r\n            \"orderEntity\": {\r\n                \"productQuantity\":this.state.quantity,\r\n                \"productPrice\":this.state.quantity*this.state.foodItem.foodItemPrice,\r\n                \"orderStatus\": \"success\",\r\n                \"foodOrderId\": this.state.foodItem.foodOrderId\r\n            }\r\n\r\n        }\r\n        console.log('myOrderBe =>' + JSON.stringify(myOrderBe));\r\n        OrderService.postNewOrder(myOrderBe).then(res => {\r\n            alert(\"Your Order placed Successfully\");\r\n\r\n        })\r\n        localStorage.setItem(\"TotalAmount\", JSON.stringify(this.state.quantity*this.state.foodItem.foodItemPrice));\r\n        this.props.history.push(`/payment`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FoodItemService.getFoodById(localStorage.getItem(\"OrderedList\")).then((response) => {\r\n            this.setState({ foodItem: response.data })\r\n        })\r\n\r\n        console.log(this.state.foodItem);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <HeaderAfterLogin />\r\n                <div className='wholeBodyCart'>\r\n                    <div className=\"containerCart\" id=\"containerCart\">\r\n                        <div className=\"form-containerCart sign-in-containerCart\">\r\n                            <form >\r\n                                <h1 classNamestyle={{ color: 'red' }}>Cart</h1>\r\n                                <h2>Food Name:{this.state.foodItem.foodItemName}</h2>\r\n                                <h2>Food Type:{this.state.foodItem.foodItemType}</h2>\r\n                                <h2>Food category:{this.state.foodItem.foodItemCategory}</h2>\r\n                                <h2>Food Price:{this.state.foodItem.foodItemPrice}</h2>\r\n                                <div style={{ display: 'flex', marginLeft: '120px' }}>\r\n                                    <h2>Quantity:</h2><input type=\"text\" placeholder=\"Quantity\" style={{ marginLeft: '10px', width: '10%' }} name=\"quantity\" value={this.state.quantity} onChange={this.changeOrderQuantity} />\r\n                                </div>\r\n                                \r\n\r\n                                <button onClick={this.OrderNow}>Order</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n// Footer\r\n// Â© 2022 GitHub, Inc.\r\n// Footer navigation\r\n// Terms\r\n// Privacy\r\n// Security\r\n// Status\r\n// Docs\r\n// Contact GitHub\r\n// Pricing\r\n// API\r\n// Training\r\n// Blog\r\n// About\r\n"]},"metadata":{},"sourceType":"module"}